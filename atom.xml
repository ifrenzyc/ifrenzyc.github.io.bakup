<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ITSYC&#39;s Blog</title>
  <subtitle>Thoughts on life and code</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-11-17T08:19:03.388Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Yang Chuang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL 安装部署</title>
    <link href="http://yoursite.com/2017/11/17/install-mysql/"/>
    <id>http://yoursite.com/2017/11/17/install-mysql/</id>
    <published>2017-11-17T07:49:34.000Z</published>
    <updated>2017-11-17T08:19:03.388Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL-安装部署"><a href="#MySQL-安装部署" class="headerlink" title="MySQL 安装部署"></a>MySQL 安装部署</h1><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><p><strong>MySQL 版本</strong>：5.7.19<br><strong>CenOS 版本</strong>：CentOS-7-x86_64-1704<br><strong>系统用户</strong>：user9（文中所有涉及到的 <code>user9</code> 都是指代系统用户名，需要替换成你实际部署的用户名）</p>
<h2 id="获取-MySQL-二机制程序"><a href="#获取-MySQL-二机制程序" class="headerlink" title="获取 MySQL 二机制程序"></a>获取 MySQL 二机制程序</h2><p>MySQL 官网提供了打包好的二进制程序包，只要下载下来、解压、配置、启动即可完成 MySQL 的部署。相当方便。下载地址：<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="external">Download MySQL Community Server</a>。</p>
<p>我们这里选择下载版本为：5.7.19 的程序包：<code>mysql-5.7.19-linux-glibc2.12-x86_64.tar.gz</code>。</p>
<h2 id="部署程序"><a href="#部署程序" class="headerlink" title="部署程序"></a>部署程序</h2><p><strong>上传程序包到服务器</strong><br>&lt;这里自己选择熟悉的工具上传。&gt;</p>
<p>这里假设上传程序包到 <code>~/apps</code> 目录下，<code>~/apps</code> 需要自己先手工创建。<br>上传完成后，查看上传的结果：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/apps</span></div><div class="line"><span class="meta">$</span><span class="bash"> ls -ahl</span></div><div class="line">total 611M</div><div class="line">drwxrwxr-x. 4 user9 user9  129 Sep  5 07:04 .</div><div class="line">drwx------. 4 user9 user9  143 Sep  5 07:07 ..</div><div class="line">-rw-r--r--. 1 user9 user9 611M Sep  5 07:03 mysql-5.7.19-linux-glibc2.12-x86_64.tar.gz</div></pre></td></tr></table></figure></p>
<p>这里可以看到我们上传的程序包。</p>
<p><strong>解压程序包</strong><br>把程序包解压到 <code>~/apps</code> 目录，后续程序运行目录和数据目录都在这个根目录下。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/apps</span></div><div class="line"><span class="meta">$</span><span class="bash"> tar -zxvf mysql-5.7.19-linux-glibc2.12-x86_64.tar.gz</span></div><div class="line"><span class="meta">$</span><span class="bash"> ln <span class="_">-s</span> /home/user9/apps/mysql-5.7.19-linux-glibc2.12-x86_64 /home/user9/apps/mysql  <span class="comment"># 这里创建一个软链接，方便后续配置或升级版本</span></span></div></pre></td></tr></table></figure></p>
<h2 id="配置及初始化"><a href="#配置及初始化" class="headerlink" title="配置及初始化"></a>配置及初始化</h2><h3 id="初始化配置文件"><a href="#初始化配置文件" class="headerlink" title="初始化配置文件"></a>初始化配置文件</h3><p>我们将 MySQL 的配置文件放在 <code>~</code> 目录下，文件名为 <code>.my.cnf</code>。配置内容如下：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> vi ~/.my.cnf</span></div><div class="line"><span class="meta"></span></div><div class="line">#<span class="bash"> For advice on how to change settings please see</span></div><div class="line"><span class="meta">#</span><span class="bash"> http://dev.mysql.com/doc/refman/5.6/en/server-configuration-defaults.html</span></div><div class="line">[mysqld_multi]</div><div class="line">mysqld = /home/user9/apps/mysql/bin/mysqld_safe</div><div class="line">mysqladmin = /home/user9/apps/mysql/bin/mysqladmin</div><div class="line"></div><div class="line"></div><div class="line">[mysqld1]</div><div class="line"><span class="meta">#</span><span class="bash"> These are commonly <span class="built_in">set</span>, remove the <span class="comment"># and set as required.</span></span></div><div class="line">basedir = /home/user9/apps/mysql</div><div class="line">datadir = /home/user9/apps/mysqldata/mysql3309</div><div class="line">port = 3309</div><div class="line">server_id = 1</div><div class="line">socket = /home/user9/apps/mysqldata/mysql3309/mysql3309.sock</div><div class="line">pid_file = /home/user9/apps/mysqldata/mysql3309/mysql3309.pid</div><div class="line">log_error = /home/user9/apps/mysqldata/mysql3309/mysqld3309.log</div><div class="line"></div><div class="line">sync_binlog = 1</div><div class="line">log_bin = mysql-bin</div><div class="line">binlog_format = ROW</div><div class="line">binlog_ignore_db = mysql</div><div class="line">log_slave_updates</div><div class="line">skip_name_resolve</div><div class="line">explicit_defaults_for_timestamp = true</div><div class="line"></div><div class="line">sql_mode = NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</div><div class="line"></div><div class="line">default_storage_engine = InnoDB</div><div class="line">transaction_isolation = REPEATABLE-READ</div><div class="line">lower_case_table_names = 1</div></pre></td></tr></table></figure></p>
<p>这里你也可以用其他工具编辑好，将 <code>.my.cnf</code> 文件放到 <code>~</code> 目录下即可。</p>
<h3 id="初始化环境配置"><a href="#初始化环境配置" class="headerlink" title="初始化环境配置"></a>初始化环境配置</h3><p>我们需要将 MySQL 的二进制脚本加入到环境变量里面，这里我们配置到 <code>~/.bash_profile</code> 文件中：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> vi ~/.bash_profile</span></div><div class="line"></div><div class="line">PATH=$PATH:$HOME/apps/mysql/bin</div><div class="line">export PATH</div></pre></td></tr></table></figure></p>
<p>修改完后 source 一下：<code>source ~/.bash_profile</code>。</p>
<h3 id="初始化数据目录"><a href="#初始化数据目录" class="headerlink" title="初始化数据目录"></a>初始化数据目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> mkdir -p /home/user9/apps/mysqldata</span></div><div class="line"><span class="meta">$</span><span class="bash"> mysql_install_db --defaults-file=/home/user9/.my.cnf --user=user9 --basedir=/home/user9/apps/mysql --datadir=/home/user9/apps/mysqldata/mysql3309</span></div></pre></td></tr></table></figure>
<p>日志输出如下：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> mysql_install_db --defaults-file=/home/user9/.my.cnf --user=user9 --basedir=/home/user9/apps/mysql --datadir=/home/user9/apps/mysqldata/mysql3309</span></div><div class="line">2017-09-05 07:07:48 [WARNING] mysql_install_db is deprecated. Please consider switching to mysqld --initialize</div><div class="line">2017-09-05 07:07:51 [WARNING] The bootstrap log isn't empty:</div><div class="line">2017-09-05 07:07:51 [WARNING] 2017-09-05T07:07:49.033474Z 0 [Warning] --bootstrap is deprecated. Please consider using --initialize instead</div><div class="line">2017-09-05T07:07:49.035706Z 0 [Warning] Changed limits: max_open_files: 1024 (requested 5000)</div><div class="line">2017-09-05T07:07:49.035716Z 0 [Warning] Changed limits: table_open_cache: 431 (requested 2000)</div></pre></td></tr></table></figure></p>
<p>这里提示我们 <code>mysql_install_db</code> 脚本已经 <code>deprecated</code> 了，不用管。</p>
<ul>
<li><code>--datadir</code> 指定了 MySQL 数据存放的路径。</li>
</ul>
<h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> mysqld_multi --defaults-extra-file=/home/user9/.my.cnf --user=user9 start 1</span></div></pre></td></tr></table></figure>
<p>日志输出如下：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> mysqld_multi --defaults-extra-file=/home/user9/.my.cnf --user=user9 start 1</span></div><div class="line">WARNING: Log file disabled. Maybe directory or file isn't writable?</div><div class="line">mysqld_multi log file version 2.16; run: Tue Sep  5 07:08:17 2017</div><div class="line"></div><div class="line">Starting MySQL servers</div></pre></td></tr></table></figure></p>
<p>可以看到，MySQL 实例已经启动成功了！</p>
<h2 id="用户密码及远程访问"><a href="#用户密码及远程访问" class="headerlink" title="用户密码及远程访问"></a>用户密码及远程访问</h2><h3 id="初始化-root-用户密码"><a href="#初始化-root-用户密码" class="headerlink" title="初始化 root 用户密码"></a>初始化 root 用户密码</h3><p>启动服务成功后，MySQL 实例默认会在当前用户的 $HOME 目录下生成一个 <code>~/.mysql_secret</code> 文件，里面记录了 MySQL 默认 root 用户的初始化密码。<br>可以通过一下命令登录：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> mysql -uroot -p  -S /home/user9/apps/mysqldata/mysql3309/mysql3309.sock</span></div><div class="line">Enter password:</div></pre></td></tr></table></figure></p>
<p><code>Enter password:</code> 处输入我们在 <code>~/.mysql_secret</code> 文件中看到的默认密码。</p>
<p>登录后，我们需要修改新密码，执行以下命令进行修改（新密码为：<code>Aa123456</code>）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SET PASSWORD = PASSWORD(&apos;Aa123456&apos;);</div><div class="line">mysql&gt; flush privileges;</div></pre></td></tr></table></figure></p>
<h3 id="配置-root-用户远程访问"><a href="#配置-root-用户远程访问" class="headerlink" title="配置 root 用户远程访问"></a>配置 root 用户远程访问</h3><p>默认安装的 MySQL 实例 root 用户只有本地访问权限，需要通过修改 <code>mysql.user</code> 表，给 root 用户授权。<br>执行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;Aa123456&apos; WITH GRANT OPTION;</div><div class="line">mysql&gt; flush privileges;</div></pre></td></tr></table></figure></p>
<p><strong>==至此，MySQL 的安装及配置全部完成！==</strong></p>
<h2 id="访问-MySQL"><a href="#访问-MySQL" class="headerlink" title="访问 MySQL"></a>访问 MySQL</h2><p>安装完成后，我们就可以正常访问该 MySQL 实例了：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> mysql -h127.0.0.1 -P3309 -uroot -p</span></div><div class="line">Password: &lt;这里输入我们设置好的密码：Aa123456&gt;</div></pre></td></tr></table></figure></p>
<h2 id="数据导入"><a href="#数据导入" class="headerlink" title="数据导入"></a>数据导入</h2><h3 id="进入-MySQL"><a href="#进入-MySQL" class="headerlink" title="进入 MySQL"></a>进入 MySQL</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"> mysql -h127.0.0.1 -P3309 -uroot -p</span></div><div class="line">Password:</div><div class="line">...</div></pre></td></tr></table></figure>
<h3 id="切换到我们要的-Database-上"><a href="#切换到我们要的-Database-上" class="headerlink" title="切换到我们要的 Database 上"></a>切换到我们要的 Database 上</h3><p>这里假设我们要用到的数据库名叫：itrace_startup<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mysql&gt; use itrace_startup;</div><div class="line"></div><div class="line">### 如果没有这个库我们要先创建：</div><div class="line">mysql&gt; create database itrace_startup;</div><div class="line">mysql&gt; use itrace_startup;</div></pre></td></tr></table></figure></p>
<h3 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h3><p>这里假设我们要导入的SQL文件名叫：<code>cust.sql</code>，且放在 <code>/home/vagrant</code> 目录下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; source /home/vagrant/cust.sql</div></pre></td></tr></table></figure></p>
<p><strong>==导入数据文件 <code>cust.sql</code> 成功！==</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MySQL-安装部署&quot;&gt;&lt;a href=&quot;#MySQL-安装部署&quot; class=&quot;headerlink&quot; title=&quot;MySQL 安装部署&quot;&gt;&lt;/a&gt;MySQL 安装部署&lt;/h1&gt;&lt;h2 id=&quot;依赖&quot;&gt;&lt;a href=&quot;#依赖&quot; class=&quot;headerli
    
    </summary>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySQL Streaming 的使用和约束</title>
    <link href="http://yoursite.com/2017/11/16/mysql-streaming/"/>
    <id>http://yoursite.com/2017/11/16/mysql-streaming/</id>
    <published>2017-11-16T09:39:34.000Z</published>
    <updated>2017-11-17T08:22:52.296Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>Client Side Cursor</li>
<li>Server Side Cursor</li>
</ul>
<p>在 MySQL 中查询超大结果集时，由于 MySQL JDBC 的 ResultSet 默认是接收完全部数据后再交由应用程序进行处理的。对于数据量很大的查询（如报表统计）、有限的 JVM 内存等程序，很容易就照成应用程序 OOM 异常（<code>java.lang.OutOfMemoryError: Java heap space</code>）。对于这个错误解决起来也很简单。</p>
<p>MySQL JDBC 支持客户端的流方式（Streaming）读取数据，即应用程序一边从数据库拉取数据，每获取到一条数据后就可以立即丢给业务逻辑程序处理。代码实现也很简单：</p>
<p>只要在初始化 Statement 的时候，设置这几个参数即可：<code>ResultSet.TYPE_FORWARD_ONLY</code>、<code>ResultSet.CONCUR_READ_ONLY</code>、<code>Integer.MIN_VALUE</code>。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">preparedStatement = connection.prepareStatement(formatSql, ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);</div><div class="line">preparedStatement.setFetchSize(Integer.MIN_VALUE);</div></pre></td></tr></table></figure>
<p><code>setFetchSize=Integer.MIN_VALUE</code> 这是一个 magic number，而不是指定每次读取多少数据。不能改成其他值。具体参考<a href="https://dev.mysql.com/doc/connector-j/5.1/en/connector-j-reference-implementation-notes.html#ResultSet" target="_blank" rel="external">官方文档</a>。<br>下面是一个简单的使用例子<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.sql.Connection;</div><div class="line"><span class="keyword">import</span> java.sql.DriverManager;</div><div class="line"><span class="keyword">import</span> java.sql.ResultSet;</div><div class="line"><span class="keyword">import</span> java.sql.Statement;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Streaming</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</div><div class="line"></div><div class="line">        String url = <span class="string">"jdbc:mysql://127.0.0.1:3306/test"</span>;</div><div class="line">        String username = <span class="string">"root"</span>;</div><div class="line">        String password = <span class="string">"Aa123456"</span>;</div><div class="line">        Connection conn = DriverManager.getConnection(url, username, password);</div><div class="line"></div><div class="line">        Statement statement =</div><div class="line">                conn.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);</div><div class="line">        statement.setFetchSize(Integer.MIN_VALUE);</div><div class="line">        <span class="comment">// MySQL connector 的 StatementImpl 的 createStreamingResultSet 方法中明确指出：</span></div><div class="line">        <span class="comment">// We only stream result sets when they are forward-only, read-only, and the fetch size has been set to Integer.MIN_VALUE</span></div><div class="line">        <span class="comment">// 也就是说必须设置这三个属性才能做到流式读取</span></div><div class="line"></div><div class="line">        <span class="keyword">int</span> batchSize = <span class="number">2000</span>;</div><div class="line"></div><div class="line">        ResultSet rs = statement.executeQuery(<span class="string">"select * from steaming_test"</span>);<span class="comment">//一般的数据读取</span></div><div class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> rowIndex = <span class="number">0</span>; rowIndex &lt; batchSize; rowIndex++) &#123;</div><div class="line">                <span class="keyword">if</span>(!rs.next())&#123;</div><div class="line">                    <span class="keyword">return</span>;</div><div class="line">                &#125;</div><div class="line">                System.out.println(<span class="string">"one line"</span>);</div><div class="line">            &#125;</div><div class="line">            System.out.println(<span class="string">"one batch"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="为什么-MySQL-没有默认就采用-Streaming-方式？"><a href="#为什么-MySQL-没有默认就采用-Streaming-方式？" class="headerlink" title="为什么 MySQL 没有默认就采用 Streaming 方式？"></a>为什么 MySQL 没有默认就采用 Streaming 方式？</h2><p>  关于 Streaming 的代价，参考：</p>
<h2 id="采用-Streaming-方式在-MySQL-协议和数据报文上有没什么影响？"><a href="#采用-Streaming-方式在-MySQL-协议和数据报文上有没什么影响？" class="headerlink" title="采用 Streaming 方式在 MySQL 协议和数据报文上有没什么影响？"></a>采用 Streaming 方式在 MySQL 协议和数据报文上有没什么影响？</h2><p>  并没有，Streaming 方式有客户端模式（Client Side Cursor）和服务端模式（Server Side Cursor），上面程序例子采用的是客户端模式，MySQL 数据库的数据报文没任何差异。</p>
<h2 id="Streaming-的主要问题"><a href="#Streaming-的主要问题" class="headerlink" title="Streaming 的主要问题"></a>Streaming 的主要问题</h2><ul>
<li>长时间占用数据库链接<ul>
<li>单个链接占用时间长</li>
<li>同个事务内链接无法复用</li>
</ul>
</li>
<li>数据库当前锁<ul>
<li>不同链接无法获取到事务锁</li>
</ul>
</li>
</ul>
<h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><h3 id="Streaming-的应用场景"><a href="#Streaming-的应用场景" class="headerlink" title="Streaming 的应用场景"></a>Streaming 的应用场景</h3><p>采用 Streaming 方式读取数据，看似一件很美好的事情，但是对于数据库本身却是代价非常大的。如果业务程序处理不当，会导致长时间占用数据库链接。目前只有下面一种场景建议采用 Streaming 方式读取数据： <strong>需要大批量获取数据库记录用于产生其他存储的数据的业务场景</strong>。<br>具体的使用例子有：</p>
<ul>
<li>用户查询大批量数据后用于导出；</li>
<li>获取整表数据用于全量更新缓存/消息中间件数据等；</li>
</ul>
<h3 id="什么场景下不适合使用"><a href="#什么场景下不适合使用" class="headerlink" title="什么场景下不适合使用"></a>什么场景下不适合使用</h3><p>有一些场景看似可以用流处理当不应该用的，比如：数据批处理。<br>如：查询一批数据进行业务处理，然后将数据改成下一个流转状态的。</p>
<h2 id="参考材料"><a href="#参考材料" class="headerlink" title="参考材料"></a>参考材料</h2><ul>
<li><a href="https://dev.mysql.com/doc/connector-j/5.1/en/connector-j-reference-implementation-notes.html#ResultSet" target="_blank" rel="external">JDBC API Implementation Notes</a></li>
<li><a href="http://hedengcheng.com/?p=771" target="_blank" rel="external">MySQL 加锁处理分析</a></li>
<li><a href="http://codepub.cn/2017/05/12/MySQL-pull-the-massive-data-out-of-memory-error/" target="_blank" rel="external">MySQL 拉取海量数据报 OutOfMemoryError</a></li>
<li><a href="https://www.wix.engineering/single-post/2017/09/18/The-Cost-of-Streaming-Data-from-MySQL" target="_blank" rel="external">The Cost of Streaming Data from MySQL</a></li>
<li><a href="https://vladmihalcea.com/2016/11/23/how-does-mysql-result-set-streaming-perform-vs-fetching-the-whole-jdbc-resultset-at-once/" target="_blank" rel="external">How does MySQL result set streaming perform vs fetching the whole JDBC ResultSet at once</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Client Side Cursor&lt;/li&gt;
&lt;li&gt;Server Side Cursor&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 MySQL 中查询超大结果集时，由于 MySQL JDBC 的 ResultSet 默认是接收完全部数据后再交由应用程序进行处理的。对于
    
    </summary>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch 的一些使用经验</title>
    <link href="http://yoursite.com/2017/07/03/elasticsearch-best-practices/"/>
    <id>http://yoursite.com/2017/07/03/elasticsearch-best-practices/</id>
    <published>2017-07-03T13:15:00.000Z</published>
    <updated>2017-07-07T16:27:14.000Z</updated>
    
    <content type="html"><![CDATA[

<p>
Elasticsearch 上手使用比较容易，但是想真正用好，却要深入研究其相关设置。以下内容是自己整理的一些实践建议：
</p>

<a id="more"></a>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> es 配置相关</h2>
<div class="outline-text-2" id="text-1">
</div><div id="outline-container-sec-1-1" class="outline-3">
<h3 id="sec-1-1"><span class="section-number-3">1.1</span> 配置 memory<sub>lock</sub></h3>
</div>

<div id="outline-container-sec-1-2" class="outline-3">
<h3 id="sec-1-2"><span class="section-number-3">1.2</span> master 节点数</h3>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 索引相关</h2>
<div class="outline-text-2" id="text-2">
</div><div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> 拆分索引</h3>
<div class="outline-text-3" id="text-2-1">
<p>
索引需要按不同业务维度、运维维度拆分。
</p>
<ul class="org-ul">
<li>方便业务查询使用，使每次查询能落在数据比较少的索引，避免在一个索引上查询所有内容；
</li>
<li>按时间或者业务域维度拆分索引，方便数据冷热处理；方便运维定时归档超过一定期限的索引；
</li>
</ul>
<p>
尽量避免都放在一个索引上。
</p>
</div>
</div>

<div id="outline-container-sec-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> 对不需要分词检索字段设置 not<sub>analayzed</sub></h3>
<div class="outline-text-3" id="text-2-2">
<p>
对一些每次查询都是按内容全文匹配的字段，设置 type="not<sub>analayzed</sub>"，减少 es 分词，同时也是避免查询结果不准确。甚至有些字段压根就不会用来做查询用的，设置为"not<sub>indexed</sub>"。
</p>
</div>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> jvm 相关</h2>
<div class="outline-text-2" id="text-3">
</div><div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> 最好内存能分配到 &lt; 32GB</h3>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> 大规模集群的一些规划</h2>
<div class="outline-text-2" id="text-4">
</div><div id="outline-container-sec-4-1" class="outline-3">
<h3 id="sec-4-1"><span class="section-number-3">4.1</span> 大集群下规划好 Data node、Master node、Client node</h3>
</div>

<div id="outline-container-sec-4-2" class="outline-3">
<h3 id="sec-4-2"><span class="section-number-3">4.2</span> 大规模环境下，拆分多个集群</h3>
</div>
</div>

Last Updated 2017-07-08 Sat 00:27.<br>Render by <a href="https://github.com/CodeFalling/hexo-renderer-org" target="_blank" rel="external">hexo-renderer-org</a> with <a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.2.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 8.2.10)
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;
Elasticsearch 上手使用比较容易，但是想真正用好，却要深入研究其相关设置。以下内容是自己整理的一些实践建议：
&lt;/p&gt;
    
    </summary>
    
      <category term="Elastic Stack" scheme="http://yoursite.com/categories/Elastic-Stack/"/>
    
    
      <category term="elasticsearch" scheme="http://yoursite.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch 日常运维操作</title>
    <link href="http://yoursite.com/2017/07/03/maintain-elasticsearch/"/>
    <id>http://yoursite.com/2017/07/03/maintain-elasticsearch/</id>
    <published>2017-07-03T13:15:00.000Z</published>
    <updated>2017-07-07T16:04:54.000Z</updated>
    
    <content type="html"><![CDATA[


Last Updated 2017-07-08 Sat 00:04.<br>Render by <a href="https://github.com/CodeFalling/hexo-renderer-org" target="_blank" rel="external">hexo-renderer-org</a> with <a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.2.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 8.2.10)
]]></content>
    
    <summary type="html">
    
      


Last Updated 2017-07-08 Sat 00:04.&lt;br&gt;Render by &lt;a href=&quot;https://github.com/CodeFalling/hexo-renderer-org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;
    
    </summary>
    
      <category term="Elastic Stack" scheme="http://yoursite.com/categories/Elastic-Stack/"/>
    
    
      <category term="elasticsearch" scheme="http://yoursite.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Elastic Stack 的相关监控</title>
    <link href="http://yoursite.com/2017/07/03/monitoring-elastic-stack/"/>
    <id>http://yoursite.com/2017/07/03/monitoring-elastic-stack/</id>
    <published>2017-07-03T13:15:00.000Z</published>
    <updated>2017-07-07T16:04:51.000Z</updated>
    
    <content type="html"><![CDATA[


<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 使用 X-Pack 进行监控</h2>
<div class="outline-text-2" id="text-1">
<p>
不差钱
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 插件</h2>
<div class="outline-text-2" id="text-2">
<p>
elasticsearch-head
</p>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 监控 Elasticsearch 的状态</h2>
<div class="outline-text-2" id="text-3">
<p>
<b>Green</b>
</p>

<p>
<b>Yellow</b>
</p>

<p>
<b>Red</b>
</p>
</div>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> 基于 Monitoring API 自定义监控</h2>
</div>

Last Updated 2017-07-08 Sat 00:04.<br>Render by <a href="https://github.com/CodeFalling/hexo-renderer-org" target="_blank" rel="external">hexo-renderer-org</a> with <a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.2.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 8.2.10)
]]></content>
    
    <summary type="html">
    
      


&lt;div id=&quot;outline-container-sec-1&quot; class=&quot;outline-2&quot;&gt;
&lt;h2 id=&quot;sec-1&quot;&gt;&lt;span class=&quot;section-number-2&quot;&gt;1&lt;/span&gt; 使用 X-Pack 进行监控&lt;/h2&gt;
&lt;div clas
    
    </summary>
    
      <category term="Elastic Stack" scheme="http://yoursite.com/categories/Elastic-Stack/"/>
    
    
      <category term="elasticsearch" scheme="http://yoursite.com/tags/elasticsearch/"/>
    
      <category term="logstash" scheme="http://yoursite.com/tags/logstash/"/>
    
      <category term="filebeat" scheme="http://yoursite.com/tags/filebeat/"/>
    
  </entry>
  
  <entry>
    <title>通过 Zabbix 实现 Logstash 的监控</title>
    <link href="http://yoursite.com/2017/06/27/use-metrics-filter-monitoring-logstash-tps-with-zabbix/"/>
    <id>http://yoursite.com/2017/06/27/use-metrics-filter-monitoring-logstash-tps-with-zabbix/</id>
    <published>2017-06-27T02:12:00.000Z</published>
    <updated>2017-07-07T16:04:48.000Z</updated>
    
    <content type="html"><![CDATA[

<p>
参考：<a href="https://kibana.logstash.es/content/logstash/performance/monitor/heartbeat.html" target="_blank" rel="external">监控方案</a>
</p>

<p>
由于 Logstash 的 Pipeline 模式，通过 filter metrics 插件和 output zabbix 插件即可实现对 Logstash 处理 TPS 的监控。
</p>

<a id="more"></a>

<p>
<b>Logstash Pipeline</b> 模型
<img src="/2017/06/27/use-metrics-filter-monitoring-logstash-tps-with-zabbix/./logstash-pipeline.png" alt="logstash-pipeline.png">
</p>

<p>
由于 logstash-output-zabbix 插件不是 Logstash 的官方插件，因此使用前需要手动先安装该插件，安装方式非常简单[参考：<a href="https://www.elastic.co/guide/en/logstash/current/plugins-outputs-zabbix.html#plugins-outputs-zabbix-zabbix_server_host" target="_blank" rel="external">zabbix|Logstash</a> ]：
</p>

<div class="org-src-container">

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ bin/logstash-plugin install logstash-output-zabbix</span><br></pre></td></tr></table></figure>
</div>

<p>
配置 Zabbix 的数据采集：
</p>
<ol class="org-ol">
<li>配置新的主机名为 “logstash-indexer-1”
</li>
</ol>

<div class="figure">
<p><img src="/2017/06/27/use-metrics-filter-monitoring-logstash-tps-with-zabbix/./zabbix-host.png" alt="zabbix-host.png">
</p>
</div>

<ol class="org-ol">
<li>配置采集项
</li>
</ol>

<div class="figure">
<p><img src="/2017/06/27/use-metrics-filter-monitoring-logstash-tps-with-zabbix/./zabbix-logstash-item.png" alt="zabbix-logstash-item.png">
</p>
</div>

<p>
修改 logstash 的配置文件，增加 metrics filter 和 zabbix output：
</p>
<div class="org-src-container">

<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">input {</span><br><span class="line">  ...</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">filter {</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">  metrics {</span><br><span class="line">    meter =&gt; <span class="string">"events"</span>  <span class="comment"># 统计每一个经过 filter 的事件</span></span><br><span class="line">    add_tag =&gt; <span class="string">"metric"</span></span><br><span class="line">    add_field =&gt; {<span class="string">"[@metadata][zabbix_key]"</span> =&gt; <span class="string">"logstash_events"</span>}  <span class="comment"># zabbix item 的 key，这个要和 zabbix 的配置一致</span></span><br><span class="line">    add_field =&gt; { <span class="string">"[@metadata][zabbix_host]"</span> =&gt; <span class="string">"logstash-indexer-1"</span> }  <span class="comment"># zabbix 写入的主机</span></span><br><span class="line">    flush_interval =&gt; <span class="number">10</span>  <span class="comment"># 每隔 10s 写一次</span></span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">output {</span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> <span class="string">"metric"</span> <span class="keyword">in</span> [tags] {</span><br><span class="line">    zabbix {</span><br><span class="line">      zabbix_server_host =&gt; <span class="string">"192.168.56.113"</span></span><br><span class="line">      zabbix_host =&gt; <span class="string">"[@metadata][zabbix_host]"</span></span><br><span class="line">      zabbix_key =&gt; <span class="string">"[@metadata][zabbix_key]"</span></span><br><span class="line">      zabbix_value =&gt; <span class="string">"[events][count]"</span>  <span class="comment"># [events][count] 是事件统计数据，还有其他字段内容，具体参考官网文档</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
</div>
<p>
配置好 logstash 后，reload 配置或重启服务即可。
具体配置参考官方文档说明。
</p>

<p>
至此，查看 Zabbix web 界面的 item 项即可看到监控 TPS 的图表了：
<img src="/2017/06/27/use-metrics-filter-monitoring-logstash-tps-with-zabbix/./logstash-tps-graph.png" alt="logstash-tps-graph.png">
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 参考内容</h2>
<div class="outline-text-2" id="text-1">
<ul class="org-ul">
<li><a href="https://www.elastic.co/guide/en/logstash/current/plugins-filters-metrics.html" target="_blank" rel="external">metrics</a>
</li>
<li><a href="https://www.elastic.co/guide/en/logstash/current/plugins-outputs-zabbix.html#plugins-outputs-zabbix-zabbix_server_host" target="_blank" rel="external">zabbix</a>
</li>
</ul>
</div>
</div>

Last Updated 2017-07-08 Sat 00:04.<br>Render by <a href="https://github.com/CodeFalling/hexo-renderer-org" target="_blank" rel="external">hexo-renderer-org</a> with <a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.2.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 8.2.10)
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;
参考：&lt;a href=&quot;https://kibana.logstash.es/content/logstash/performance/monitor/heartbeat.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;监控方案&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
由于 Logstash 的 Pipeline 模式，通过 filter metrics 插件和 output zabbix 插件即可实现对 Logstash 处理 TPS 的监控。
&lt;/p&gt;
    
    </summary>
    
      <category term="Elastic Stack" scheme="http://yoursite.com/categories/Elastic-Stack/"/>
    
    
      <category term="logstash" scheme="http://yoursite.com/tags/logstash/"/>
    
      <category term="zabbix" scheme="http://yoursite.com/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>分布式事务知识整理</title>
    <link href="http://yoursite.com/2017/06/22/distributed-transactions-introduce/"/>
    <id>http://yoursite.com/2017/06/22/distributed-transactions-introduce/</id>
    <published>2017-06-22T14:21:00.000Z</published>
    <updated>2017-07-07T16:05:04.000Z</updated>
    
    <content type="html"><![CDATA[


Last Updated 2017-07-08 Sat 00:05.<br>Render by <a href="https://github.com/CodeFalling/hexo-renderer-org" target="_blank" rel="external">hexo-renderer-org</a> with <a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.2.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 8.2.10)
]]></content>
    
    <summary type="html">
    
      


Last Updated 2017-07-08 Sat 00:05.&lt;br&gt;Render by &lt;a href=&quot;https://github.com/CodeFalling/hexo-renderer-org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在 Emacs 中使用 PlantUML</title>
    <link href="http://yoursite.com/2017/06/05/using-plantuml-in-emacs/"/>
    <id>http://yoursite.com/2017/06/05/using-plantuml-in-emacs/</id>
    <published>2017-06-05T02:12:00.000Z</published>
    <updated>2017-07-07T16:04:43.000Z</updated>
    
    <content type="html"><![CDATA[

<p>
PlantUML 的使用依赖与 Java 环境，因此需要在系统上先安装好 Java 环境。
</p>
<ul class="org-ul">
<li>下载 PlantUML jar：<a href="http://plantuml.com/download" target="_blank" rel="external">PlantUML compiled Jar</a>。
</li>
<li>plantuml-mode：<a href="https://github.com/skuro/plantuml-mode" target="_blank" rel="external">skuro/plantuml-mode - GitHub</a>
</li>
</ul>

<a id="more"></a>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Emacs 配置</h2>
<div class="outline-text-2" id="text-1">
<p>
需要依赖 Java 环境及 plantuml.jar（<a href="http://plantuml.com/download" target="_blank" rel="external">下载</a>）。
</p>
<div class="org-src-container">

<figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">(<span class="keyword">setq</span> plantuml-java-args <span class="list">(<span class="keyword">expand-file-name</span> <span class="string">"~/.emacs.d/bin/plantuml.jar"</span>)</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="list">(<span class="keyword">use-package</span> plantuml-mode</span><br><span class="line">  <span class="keyword">:ensure</span> <span class="literal">t</span></span><br><span class="line">  <span class="keyword">:config</span></span><br><span class="line">  <span class="comment">;; Enable plantuml-mode for PlantUML files</span></span><br><span class="line">  <span class="list">(<span class="keyword">add-to-list</span> <span class="quoted">'auto-mode-alist</span> <span class="quoted">'(<span class="string">"\\.plantuml\\'"</span> . plantuml-mode)</span>)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">;; Enable plantuml-mode within an org-mode document</span></span><br><span class="line">  <span class="list">(<span class="keyword">add-to-list</span> <span class="quoted">'org-src-lang-modes</span> <span class="quoted">'(<span class="string">"plantuml"</span> . plantuml)</span>)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">;; Use fundamental mode when editing plantuml blocks with C-c '</span></span><br><span class="line">  <span class="list">(<span class="keyword">add-to-list</span> <span class="quoted">'org-src-lang-modes</span> <span class="quoted">(<span class="keyword">quote</span> (<span class="string">"plantuml"</span> . fundamental))</span>)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">;; active Org-babel languages</span></span><br><span class="line">  <span class="list">(<span class="keyword">org-babel-do-load-languages</span></span><br><span class="line">   <span class="quoted">'org-babel-load-languages</span></span><br><span class="line">   <span class="quoted">'(;; other Babel languages</span><br><span class="line">     (plantuml . <span class="literal">t</span>))</span>)</span></span><br><span class="line">  )</span></span><br></pre></td></tr></table></figure>
</div>

<p>
当执行 org code block 后，显示图片
</p>
<div class="org-src-container">

<figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">(<span class="keyword">add-hook</span> <span class="quoted">'org-babel-after-execute-hook</span> <span class="quoted">'itsyc/display-inline-images</span> <span class="quoted">'append</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="list">(<span class="keyword">defun</span> itsyc/display-inline-images <span class="list">()</span></span><br><span class="line">  <span class="list">(<span class="keyword">condition-case</span> <span class="literal">nil</span></span><br><span class="line">      <span class="list">(<span class="keyword">org-display-inline-images</span>)</span></span><br><span class="line">    <span class="list">(<span class="keyword">error</span> <span class="literal">nil</span>)</span>)</span>)</span></span><br></pre></td></tr></table></figure>
</div>

<p>
PlantUML 语法参考：<a href="http://emacsist.com/10250" target="_blank" rel="external">使用 Emacs 敲出 UML，PlantUML 快速指南</a>（官方：<a href="http://plantuml.com/sequence-diagram" target="_blank" rel="external">时序图（Sequence Diagram）</a>）。
</p>

<p>
使用 PlantUML 的主要问题：缺乏可视化，不直观，但编辑相对简单。
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 中文乱码问题</h2>
<div class="outline-text-2" id="text-2">
<p>
<b>解决：</b> 在 code block 的 option 中添加 <code>:cmdline -charset utf-8</code> （参见：<a href="https://www.cnblogs.com/yangwen0228/p/6825554.html" target="_blank" rel="external">Windows 平台下在 Emacs 中使用 plantuml 中文乱码问题（已解决）</a>）
</p>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 参考阅读</h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li><a href="http://wiki.manan.org/tools/org_mode_drawing.html" target="_blank" rel="external">使用 Org mode 画图</a>
</li>
</ul>
</div>
</div>

Last Updated 2017-07-08 Sat 00:04.<br>Render by <a href="https://github.com/CodeFalling/hexo-renderer-org" target="_blank" rel="external">hexo-renderer-org</a> with <a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.2.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 8.2.10)
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;
PlantUML 的使用依赖与 Java 环境，因此需要在系统上先安装好 Java 环境。
&lt;/p&gt;
&lt;ul class=&quot;org-ul&quot;&gt;
&lt;li&gt;下载 PlantUML jar：&lt;a href=&quot;http://plantuml.com/download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PlantUML compiled Jar&lt;/a&gt;。
&lt;/li&gt;
&lt;li&gt;plantuml-mode：&lt;a href=&quot;https://github.com/skuro/plantuml-mode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;skuro/plantuml-mode - GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Emacs" scheme="http://yoursite.com/categories/Emacs/"/>
    
    
      <category term="orgmode" scheme="http://yoursite.com/tags/orgmode/"/>
    
      <category term="plantuml" scheme="http://yoursite.com/tags/plantuml/"/>
    
  </entry>
  
  <entry>
    <title>使用 Hexo + Orgmode 构建博客</title>
    <link href="http://yoursite.com/2017/06/04/blogging-with-hexo-orgmode/"/>
    <id>http://yoursite.com/2017/06/04/blogging-with-hexo-orgmode/</id>
    <published>2017-06-04T00:36:32.000Z</published>
    <updated>2017-11-17T08:22:42.785Z</updated>
    
    <content type="html"><![CDATA[<p>使用 Hexo 搭建一个个人博客的过程非常简单，参考官方文档即可 [<a href="https://github.com/hexojs/hexo" target="_blank" rel="external">GitHub</a>]。</p>
<h1 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h1><h2 id="使用-orgmode-来编辑文档"><a href="#使用-orgmode-来编辑文档" class="headerlink" title="使用 orgmode 来编辑文档"></a>使用 orgmode 来编辑文档</h2><p>感谢 CodeFalling 插件：<a href="https://github.com/CodeFalling/hexo-renderer-org" target="_blank" rel="external">CodeFalling/hexo-renderer-org - GitHub</a></p>
<h3 id="禁止-hexo-renderer-org-生成-toc"><a href="#禁止-hexo-renderer-org-生成-toc" class="headerlink" title="禁止 hexo-renderer-org 生成 toc"></a>禁止 hexo-renderer-org 生成 toc</h3><p><strong>方法一：</strong><br>在每篇文章前面加上 =#+OPTIONS: toc:nil= 。</p>
<p><strong>方法二：</strong><br>统一设置。</p>
<p>参考：<a href="https://github.com/CodeFalling/hexo-renderer-org" target="_blank" rel="external">CodeFalling/hexo-renderer-org - GitHub</a>。</p>
<h2 id="hexo-asset-image"><a href="#hexo-asset-image" class="headerlink" title="hexo-asset-image"></a>hexo-asset-image</h2><p>配合这个插件使用：<br><a href="https://github.com/CodeFalling/hexo-asset-image" target="_blank" rel="external">https://github.com/CodeFalling/hexo-asset-image</a>  这个插件值得使用</p>
<ul>
<li><a href="http://www.tuicool.com/articles/umEBVfI" target="_blank" rel="external">在 hexo 中无痛使用本地图片</a></li>
<li><a href="http://etrd.org/2017/01/23/hexo%E4%B8%AD%E5%AE%8C%E7%BE%8E%E6%8F%92%E5%85%A5%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/" target="_blank" rel="external">hexo 中完美插入本地图片</a></li>
</ul>
<h3 id="其他解决方案"><a href="#其他解决方案" class="headerlink" title="其他解决方案"></a>其他解决方案</h3><p>图床</p>
<h2 id="使用-Emacs-来生成博客静态页面及启停-Hexo"><a href="#使用-Emacs-来生成博客静态页面及启停-Hexo" class="headerlink" title="使用 Emacs 来生成博客静态页面及启停 Hexo"></a>使用 Emacs 来生成博客静态页面及启停 Hexo</h2><p>参考：<a href="http://summerisgreen.com/blog/2016-09-30-2016-09-30-%E4%BD%BF%E7%94%A8hexo%E5%92%8Cemacs-org%E6%9D%A5%E5%86%99%E5%8D%9A%E5%AE%A2.html" target="_blank" rel="external">使用 Hexo 和 emacs-Org 来写博客</a></p>
<h2 id="RSS-插件"><a href="#RSS-插件" class="headerlink" title="RSS 插件"></a>RSS 插件</h2><p>支持 RSS：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-generator-feed --save</div></pre></td></tr></table></figure></p>
<p>启动服务器，用浏览器打开 <a href="http://localhost:4000/atom.xml，就可以看到" target="_blank" rel="external">http://localhost:4000/atom.xml，就可以看到</a> RSS 已经生效了。</p>
<p>关于 RSS 的设置。</p>
<h1 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h1><p>Hexo 有丰富的主题资源可以使用，其中比较知名的的是 NexT 主题。</p>
<p>不同的主题配置会很不一样。</p>
<p><strong>其他一些好看的主题：</strong></p>
<ul>
<li><a href="https://github.com/7ye/maupassant-hexo" target="_blank" rel="external">7ye/maupassant-hexo - GitHub</a></li>
</ul>
<h2 id="Wiki-Theme-For-Hexo"><a href="#Wiki-Theme-For-Hexo" class="headerlink" title="Wiki Theme For Hexo"></a>Wiki Theme For Hexo</h2><p>同样也有用于构建 Wiki 的主题，参考：<a href="http://www.jianshu.com/p/e7413116e9d4" target="_blank" rel="external">Hexo 搭建 WiKi</a>(<a href="https://github.com/wzpan/hexo-theme-wixo" target="_blank" rel="external">wzpan/hexo-theme-wixo - GitHub</a>)</p>
<h1 id="disqus-评论"><a href="#disqus-评论" class="headerlink" title="disqus 评论"></a>disqus 评论</h1><p>$ 常用命令</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
<h1 id="参考材料"><a href="#参考材料" class="headerlink" title="参考材料"></a>参考材料</h1><ul>
<li><a href="https://github.com/lengyueyang/lengyueyang.github.io" target="_blank" rel="external">https://lengyueyang.github.io/</a></li>
<li><a href="http://summerisgreen.com/blog/2016-09-30-2016-09-30-%E4%BD%BF%E7%94%A8hexo%E5%92%8Cemacs-org%E6%9D%A5%E5%86%99%E5%8D%9A%E5%AE%A2.html" target="_blank" rel="external">使用 Hexo 和 emacs-Org 来写博客</a></li>
<li><a href="https://weychen.github.io/2016/09/28/set-up-blog-with-hexo-org-mode/" target="_blank" rel="external">set-up-blog-with-hexo+org-mode</a></li>
<li><a href="https://lovenight.github.io/2015/11/10/Hexo-3-1-1-%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/" target="_blank" rel="external">Hexo 3.1.1 静态博客搭建指南</a></li>
</ul>
<h1 id="解决-NexT-主题-Tags-Categories-“Cannot-GET-tags-“-错误"><a href="#解决-NexT-主题-Tags-Categories-“Cannot-GET-tags-“-错误" class="headerlink" title="解决 NexT 主题 Tags/Categories “Cannot GET /tags/“ 错误"></a>解决 NexT 主题 Tags/Categories “Cannot GET /tags/“ 错误</h1><p><a href="https://beeant0512.github.io/2016/03/20/2016-03-20-21-50-10/" target="_blank" rel="external">Next 主题 Tags/Categories Cannot GET /tags/</a></p>
<h1 id="一些比较不错的-Hexo-博客"><a href="#一些比较不错的-Hexo-博客" class="headerlink" title="一些比较不错的 Hexo 博客"></a>一些比较不错的 Hexo 博客</h1><ul>
<li><a href="http://lowrank.science/" target="_blank" rel="external">Grok</a></li>
</ul>
<h1 id="目前问题"><a href="#目前问题" class="headerlink" title="目前问题"></a>目前问题</h1><ol>
<li>使用 hexo-renderer-org，如果内容有 _ 的内容，下划线后面的文字都会转换成下标，目前还不知道如何处理。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 Hexo 搭建一个个人博客的过程非常简单，参考官方文档即可 [&lt;a href=&quot;https://github.com/hexojs/hexo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;]。&lt;/p&gt;
&lt;h1 id=&quot;基本设置&quot;&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="emacs" scheme="http://yoursite.com/tags/emacs/"/>
    
      <category term="orgmode" scheme="http://yoursite.com/tags/orgmode/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch 核心概念</title>
    <link href="http://yoursite.com/2017/06/04/elasticsearch-introduction/"/>
    <id>http://yoursite.com/2017/06/04/elasticsearch-introduction/</id>
    <published>2017-06-04T00:36:00.000Z</published>
    <updated>2017-07-07T16:01:11.000Z</updated>
    
    <content type="html"><![CDATA[

<p>
在深入学习使用 Elasticsearch（以下简称：`es`）之前，有必要对其相关的概念进行了解。核心概念如下：
</p>

<a id="more"></a>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 集群(Cluster)</h2>
<div class="outline-text-2" id="text-1">
<p>
集群是 es 的一个分布式运作环境，有一个统一的集群名字（`cluster.name`）。由多个节点构成，其中有且只有一个为主节点，这个主节点是可以通过选举产生的，主从节点是对于集群内部来说的。es 的一个概念就是去中心化，字面上理解就是无中心节点，这是对于集群外部来说的，因为从外部来看 es 集群，在逻辑上是个整体，你与任何一个节点的通信和与整个 es 集群通信是等价的。
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 节点(Node)</h2>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 索引(index)</h2>
</div>

<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> 类型(Type)</h2>
</div>

<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> 文档(Document)</h2>
</div>

<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> 分片(Shard)</h2>
</div>

<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> 副本(Replica)</h2>
</div>

Last Updated 2017-07-08 Sat 00:01.<br>Render by <a href="https://github.com/CodeFalling/hexo-renderer-org" target="_blank" rel="external">hexo-renderer-org</a> with <a href="http://www.gnu.org/software/emacs/" target="_blank" rel="external">Emacs</a> 25.2.1 (<a href="http://orgmode.org" target="_blank" rel="external">Org</a> mode 8.2.10)
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;
在深入学习使用 Elasticsearch（以下简称：`es`）之前，有必要对其相关的概念进行了解。核心概念如下：
&lt;/p&gt;
    
    </summary>
    
      <category term="Elastic Stack" scheme="http://yoursite.com/categories/Elastic-Stack/"/>
    
    
      <category term="elasticsearch" scheme="http://yoursite.com/tags/elasticsearch/"/>
    
  </entry>
  
</feed>
